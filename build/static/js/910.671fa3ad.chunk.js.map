{"version":3,"file":"static/js/910.671fa3ad.chunk.js","mappings":"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","sources":["atom/timer/Timer.js","organisms/heroSection/FirstPlay.js","organisms/mainSection/FirstPlay.js","pages/firstPlay/FirstPlay.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Timer = ({ initialTime = 0 }) => {\r\n  const [hours, setHours] = useState(Math.floor(initialTime / 3600));\r\n  const [minutes, setMinutes] = useState(Math.floor((initialTime % 3600) / 60));\r\n  const [seconds, setSeconds] = useState(initialTime % 60);\r\n\r\n  useEffect(() => {\r\n    let interval = null;\r\n\r\n    // Check if the timer has reached 0\r\n    if (hours === 0 && minutes === 0 && seconds === 0) {\r\n      clearInterval(interval);\r\n    } else {\r\n      interval = setInterval(() => {\r\n        // Decrement the time units\r\n        if (seconds === 0) {\r\n          if (minutes === 0) {\r\n            if (hours === 0) {\r\n              clearInterval(interval);\r\n            } else {\r\n              // Decrement hours and reset minutes and seconds\r\n              setHours((prevHours) => prevHours - 1);\r\n              setMinutes(59);\r\n              setSeconds(59);\r\n            }\r\n          } else {\r\n            // Decrement minutes and reset seconds\r\n            setMinutes((prevMinutes) => prevMinutes - 1);\r\n            setSeconds(59);\r\n          }\r\n        } else {\r\n          // Decrement seconds\r\n          setSeconds((prevSeconds) => prevSeconds - 1);\r\n        }\r\n      }, 1000);\r\n    }\r\n\r\n    // Clean up the interval on component unmount\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [hours, minutes, seconds]);\r\n\r\n  return (\r\n    <div className='flex justify-center'>\r\n      <p className='gradient-outline-brown pt-1 md:pt-0 text-[4vw] md:text-[4vw] font-upheaval  tracking-[-1px]'>\r\n        {/* Display hours, minutes, and seconds */}\r\n        <span className='tracking-[6px] hover:text-[white] transition ease-in-out duration-500'>{hours < 10 ? `0${hours}` : hours}</span> :{' '}\r\n        <span className='tracking-[6px] hover:text-[white] transition ease-in-out duration-500'>{minutes < 10 ? `0${minutes}` : minutes}</span> :{' '}\r\n        <span className='tracking-[6px] hover:text-[white] transition ease-in-out duration-500'>{seconds < 10 ? `0${seconds}` : seconds}</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import React, { useState } from 'react'\r\n\r\n// video\r\nimport AnimPlayGame from \"../../assets/images/home/AnimPlayGame.gif\";\r\nimport Timer from '../../atom/timer/Timer';\r\nimport VideoLoader from '../../atom/videoLoader/VideoLoader';\r\n\r\nconst HeroFirstPlay = ({videoLoaded, setVideoLoaded}) => {\r\n    return (\r\n        <div className=\"relative  \">\r\n            {!videoLoaded &&\r\n                <VideoLoader />\r\n            }\r\n            {/* <video controls={false} autoPlay muted loop src={AnimPlayGame}\r\n                className={`w-full ${videoLoaded ? '' : 'hidden'}`}\r\n                onLoadedData={() => setVideoLoaded(true)}\r\n            /> */}\r\n            <div className='w-full '>\r\n                <img className={`w-full object-cover ${videoLoaded ? '' : 'hidden'}`} src={AnimPlayGame} alt=\"\" onLoad={() => setVideoLoaded(true)} />\r\n            </div>\r\n            {videoLoaded && <div className=\"first-play-bg absolute w-full h-full top-[0%] flex justify-center items-center flex-col \">\r\n                <p className='gradient-outline-brown-light mt-10 text-center text-[4.5vw] md:text-[5vw] font-upheaval hover:text-[white] tracking-[3px] leading-[18px] md:leading-[60px] 2xl:leading-[80%] transition ease-in-out duration-500'>\r\n                    THE FIRST <br /> <span className='gradient-outline-brown hover:text-[white] transition ease-in-out duration-500'>PLAY-TO-MINT</span>\r\n                </p>\r\n                <div className=\"flex justify-center border border-[#00000000] text-white hover:text-[#fe9710] bg-[#00000077] hover:bg-[#000000af] w-[76%] lg:w-[40%] mt-2 md:mt-12 transition ease-in-out duration-1000\">\r\n                    <p className='text-[2.7vw] sm:text-[2vw] lg:text-[24px] 2xl:text-[34px] font-[\"VT323\"] px-7 py-3'>\r\n                        No applications. No grind. Pixel Quest rewards supporters and skill. All you need to do to be part of our free mint and P2E ecosystem is play ETH & Arrow. Win enough gems and youâ€™ll receive a guaranteed Allowlist spot.\r\n                    </p>\r\n                </div>\r\n                <div className=\"flex justify-center border border-[#00000000] text-white hover:text-[#fe9710] bg-[#00000077] hover:bg-[#000000af] w-[46%] lg:w-[40%] 2xl:w-[30%] mt-2 md:mt-12 transition ease-in-out duration-1000\">\r\n                    <p className=' text-[2vw] lg:text-[24px] 2xl:text-[34px] font-[\"VT323\"] px-7 py-3'>\r\n                        *Currently only available on Desktop\r\n                    </p>\r\n                </div>\r\n                <div className='flex flex-col items-center'>\r\n                    <p className=\"gradient-outline-brown pt-4 md:pt-9 text-[3.5vw] md:text-[1.7vw] font-upheaval  tracking-[3px] hover:text-[white] transition ease-in-out duration-500\">\r\n                        GAME UNLOCKS IN\r\n                    </p>\r\n                    <Timer initialTime='40000' />\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroFirstPlay","import React from 'react'\r\n\r\n// svg\r\nimport shotMan from '../../assets/images/home/shotMan.gif'\r\n\r\nconst MainFirstPlay = () => {\r\n    return (\r\n        <div className='main-first-play-bg flex flex-col items-center'>\r\n            <p className='gradient-outline-brown text-center pt-[7%] pb-[3%] text-[4vw] sm:text-[2vw] md:text-[3vw] xl:text-[56px] 2xl:text-[66px] font-upheaval hover:text-[white] tracking-[3px] transition ease-in-out duration-500'>\r\n                GAMEPLAY\r\n            </p>\r\n            <p className='text-[white] hover:text-[#F2994A] text-center w-[80%] md:w-[61%] font-[\"VT323\"] sm:text-[24px] 2xl:text-[34px] pt-[0%] pb-[6%] transition ease-in-out duration-500'>\r\n                Simple to learn hard to master. Enter the Pixel Quest castle as a bowman. Convert monstrous\r\n                slimes to your team and shoot down your opponents. Dashing, parrying, and fast-paced\r\n                marksmanship make the game a heart-pumping challenge\r\n            </p>\r\n            <div className='w-[133px] h-[117px] md:w-[291px] md:h-[204px]  mb-[6%] '>\r\n                <img className='w-full h-full object-cover' src={shotMan} alt=\"\" />\r\n            </div>\r\n            {/* <div className='w-[291px] h-[204px] mb-[6%]'>\r\n            <img className='w-full h-full object-cover' src={shotMan} alt=\"\" />\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainFirstPlay","import React, { useState } from 'react'\r\nimport HeroFirstPlay from '../../organisms/heroSection/FirstPlay'\r\nimport MainFirstPlay from '../../organisms/mainSection/FirstPlay'\r\nimport ScrollToTop from '../../atom/scrollToTop/ScrollToTop';\r\n\r\nconst FirstPlay = () => {\r\n    const [videoLoaded, setVideoLoaded] = useState(false);\r\n    const scrollOffset = window.innerWidth >= 600 ? 13 : 0;\r\n    return (\r\n        <>\r\n        {/* <ScrollToTop top={scrollOffset}/> */}\r\n        <HeroFirstPlay videoLoaded={videoLoaded} setVideoLoaded={setVideoLoaded}/>\r\n        {videoLoaded && <MainFirstPlay/>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FirstPlay"],"names":["_ref","_ref$initialTime","initialTime","_useState","useState","Math","floor","_useState2","_slicedToArray","hours","setHours","_useState3","_useState4","minutes","setMinutes","_useState5","_useState6","seconds","setSeconds","useEffect","interval","clearInterval","setInterval","prevHours","prevMinutes","prevSeconds","_jsx","className","children","_jsxs","concat","videoLoaded","setVideoLoaded","VideoLoader","src","AnimPlayGame","alt","onLoad","Timer","shotMan","window","innerWidth","_Fragment","HeroFirstPlay","MainFirstPlay"],"sourceRoot":""}